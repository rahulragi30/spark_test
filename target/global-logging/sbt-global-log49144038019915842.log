[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Rahul\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Rahul\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.2 (Oracle Corporation Java 1.8.0_351)
[debug]       Load.loadUnit: plugins took 144.6318ms
[debug]       Load.loadUnit: defsScala took 0.4045ms
[debug] [Loading] Scanning directory C:\Users\Rahul\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Rahul\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 122.174 ms
[debug]           Load.resolveProject(global-plugins) took 67.6294ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Rahul\.sbt\1.0\plugins, plugins: List(<none>))) took 228.6072ms
[debug] [Loading] Done in C:\Users\Rahul\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 272.9836ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2782ms
[debug]     Load.loadUnit(file:/C:/Users/Rahul/.sbt/1.0/plugins/, ...) took 429.1919ms
[debug]   Load.apply: load took 719.8026ms
[debug]   Load.apply: resolveProjects took 7.8276ms
[debug]   Load.apply: finalTransforms took 91.3506ms
[debug]   Load.apply: config.delegates took 16.4471ms
[debug]   Load.apply: Def.make(settings)... took 595.599ms
[debug]   Load.apply: structureIndex took 123.143ms
[debug]   Load.apply: mkStreams took 2.0532ms
[info] loading global plugins from C:\Users\Rahul\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8354.5383ms
[debug]           Load.loadUnit: plugins took 39.7732ms
[debug]           Load.loadUnit: defsScala took 0.0055ms
[debug] [Loading] Scanning directory C:\Users\Rahul\IdeaProjects\sbt_demo\project
[debug]             Load.loadUnit: mkEval took 17.9502ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Rahul\IdeaProjects\sbt_demo\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4788 ms
[info] loading settings for project sbt_demo-build from idea.sbt ...
[debug]               Load.resolveProject(sbt_demo-build) took 3.7124ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sbt_demo-build, base: C:\Users\Rahul\IdeaProjects\sbt_demo\project, plugins: List(<none>))) took 6.8005ms
[debug] [Loading] Done in C:\Users\Rahul\IdeaProjects\sbt_demo\project, returning: (sbt_demo-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5362.3565ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.5231ms
[debug]         Load.loadUnit(file:/C:/Users/Rahul/IdeaProjects/sbt_demo/project/, ...) took 5408.6853ms
[debug]       Load.apply: load took 5410.5892ms
[debug]       Load.apply: resolveProjects took 0.1494ms
[debug]       Load.apply: finalTransforms took 11.8851ms
[debug]       Load.apply: config.delegates took 0.4519ms
[debug]       Load.apply: Def.make(settings)... took 93.2338ms
[debug]       Load.apply: structureIndex took 27.8949ms
[debug]       Load.apply: mkStreams took 0.0039ms
[info] loading project definition from C:\Users\Rahul\IdeaProjects\sbt_demo\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 9294.3788ms
[debug]     Load.loadUnit: defsScala took 0.006ms
[debug] [Loading] Scanning directory C:\Users\Rahul\IdeaProjects\sbt_demo
[debug]       Load.loadUnit: mkEval took 0.7043ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.7703 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 73.0286ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Rahul\IdeaProjects\sbt_demo, plugins: List(<none>))) took 80.6866ms
[debug] [Loading] Done in C:\Users\Rahul\IdeaProjects\sbt_demo, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2172.4384ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.7237ms
[debug]   Load.loadUnit(file:/C:/Users/Rahul/IdeaProjects/sbt_demo/, ...) took 11478.7473ms
[debug] Load.apply: load took 11481.2528ms
[debug] Load.apply: resolveProjects took 0.3594ms
[debug] Load.apply: finalTransforms took 34.5261ms
[debug] Load.apply: config.delegates took 0.4778ms
[debug] Load.apply: Def.make(settings)... took 131.5193ms
[debug] Load.apply: structureIndex took 33.6644ms
[debug] Load.apply: mkStreams took 0.0046ms
[info] set current project to sbt_demo (in build file:/C:/Users/Rahul/IdeaProjects/sbt_demo/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58493 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58493, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to sbt_demo (in build file:/C:/Users/Rahul/IdeaProjects/sbt_demo/)
[debug] > Exec(idea-shell, None, None)
